@charset "UTF-8";
@font-face {
    font-family: 'bebas';
    src: url('dados/fontes/BebasNeue-Regular.ttf') format('truetype');
}
@font-face {
    font-family: 'droid';
    src: url('dados/fontes/idroid.otf') format('opentype');
    font-weight: normal;
}

/*
Paleta de cores monocromatica:
-#c5ebd6;
-#83e1ad;
-#3ddc84;
-#2fa866;
-#1a5c37;
-#063d1e;
obs: O bloco 'root' e a onde temos as variaveis em CSS que servem para o documento inteiro, sendo assim para declarar uma variavel em CSS temos que usar '--' antes do nome em si da variavel e depois do nome colocamos ':' e o valor da variavel. Nao pode ter espaços nos nomes das variaveis.
*/


:root{
    --cor0: #c5ebd6;
    --cor1: #83e1ad;
    --cor2: #3ddc84;
    --cor3: #2fa866;
    --cor4: #1a5c37;
    --cor5: #063d1e;

    --fonte-padrao: Arial, Helvetica, Verdana, sans-serif;
    --fonte-destaque: 'bebas', cursive;
    --fonte-android: 'droid', cursive;
}

*{
    margin: 0px;
    padding: 0px;
}
/*essas sao configuraçoes globais, como o proprio nome ja diz, elas selecionam todos os elementos existentes no documneto HTML e CSS.*/
/*O sistema de variaveis em CSS e bem facil, sendo assim isso existe para facilitar o manuzeio das cores como exemplo, em vez de digitar o codigo hexadecimal da cor eu so coloco o nome da variavel dentro de 'var'
Sempre usar variaveis pois se o cliente mudar as paletas no meio do caminho n e necessario mudar um por um e sim somente o root, e todas as cores com essa variavel teram mudado, MUITO MAIS PRATICOOOO!
Obs: Uma imagem por padrão não é um bloco inline ou level, ent para colocar essa carecterística deve se colocar a declaração 'display: block;'. Isso explodiu a minha mente!!!
*/

body{
    background-color: var(--cor0);
    font-family: var(--fonte-padrao);
}
header{
    background-image: linear-gradient(to bottom, var(--cor3), var(--cor5));
    min-height: 150px;
    text-align: center;
    padding-top: 40px;
}
header > h1{
    color: white;
    font-family: var(--fonte-destaque);
    font-size: 3em;
    font-weight: normal;
    margin-bottom: 20px;
    text-shadow: 2px 2px 0px rgba(0, 0, 0, 0.201);
}
header > p{
    color: white;
    font-family: var(--fonte-padrao);
    font-size: 1.2em;
    /*Tive que colocar margin: auto no p pois no momento que defini ele passou a ser um bloco 'span'*/
    margin: auto;
    margin-bottom: 15px;
    padding-left: 10px;
    padding-right: 10px;
    text-shadow: 2px 2px 0px rgba(0, 0, 0, 0.345);
}
nav{
    background-color: var(--cor5);
    padding: 10px;
    box-shadow: 0px 7px 7px rgba(0, 0, 0, 0.356);
}
nav > a{
    color: var(--cor1);
    text-decoration: none;
    padding: 10px;
    font-weight: bold;
}
nav > a:hover{
    background-color: var(--cor3);
    color: var(--cor5);
    border-radius: 5px;
    /*Isso aqui em seguida é muito foda e uma novidade para mim, eu sabia que isso existia mas eu não sabia fazer então para fazer uma trazação de animação de estado (pseudo-classes/pseudo-elementos) é só usar a declaração 'transition-duration: x;'*/
    transition-duration: 0.25s;
}
main{
    background-color: white;
    min-width: 300px;
    max-width: 1000px;
    margin: auto;
    margin-bottom: 30px;
    padding: 20px;
    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.288);
    border-bottom-left-radius: 10px;
    border-bottom-right-radius: 10px;
}
main > article > h1, h2{ /*isso que eu fiz foi foda*/
    font-family: var(--fonte-android);
    font-weight: normal;
}
main > article > h1{
    color: var(--cor5);
}
main > article > h2{
    background-image: linear-gradient(to right, var(--cor1), transparent);
    color: var(--cor4);
    font-size: 1.8em;
    text-indent: 8px;
}
main p{ /*Não coloquei o sinal de maior pois sem ele isso indica que     esse bloco de declarações servem para todos os 'p' independentes do  nível, ou seja, se colocar só vai servir para os 'p' que estão no main e os que estão em níveis abaixos como ' main > article >p' não serviram.*/
    margin: 15px 0px /*O primeiro lugar é para cima e baixo, e o segundo lugar é para os lados, direita e esquerda*/;
    text-align: justify;
    text-indent: 25px;
    line-height: 2em; /*Essa declaração não é nada menos que o espaçamento entre as linhas, se não quiser espaçamento entre elas é só colocar '1em, ou 16px' pois esse é o tamanho da letra parão*/
}
main strong{
    color: var(--cor4);
    font-weight: bold;
}
main a{
    color: var(--cor5);
    background-color: var(--cor1);
    text-decoration: none;
    font-weight: bold;
    padding: 2px 5px; /*A mesma regra do margin*/
}
main a:hover{
    color: var(--cor4);
    text-decoration: underline;
}
.externo::after{
    content: '\1F517';
}

img{
    width: 100%;
}
#imagempq{
    max-width: 350px;
    display: block;
    margin: auto;
}
.video{
    margin: 0px -20px 30px -20px;
    padding: 20px;
    padding-bottom: 60%;
    position: relative;
}
.video > iframe{
    position: absolute;
    top: 5%;
    left: 5%;
    width: 90%;
    height: 90%;
}
abbr{
    cursor: pointer;
}

aside{
    background-color: var(--cor1);
    padding: 10px;
    border-radius: 10px;
    box-shadow: 3px 3px 8px rgba(0, 0, 0, 0.4);
}
aside > h3{
    background-color: var(--cor4);
    color: white;
    padding: 10px;
    margin: -10px -10px 0px -10px; /*A margem -10px é para aproximar as coisas em geral*/
    border-radius: 10px 10px 0px 0px;
    text-indent: 25px;
}

aside > ul{ 
    list-style-position: inside; /*Essa declaração serve para colocar a lista como um todo dentro da caixa, isso facilita muito a vida pois não preciso mais usar padding-left ou position alguma coisa, por padrão a lista tanto ul quanto ol são para fora 'outside'.*/
    columns: 2;/*Essa declaração serve para dividir as lista em geral, não tem unidades pois é em relação ao numeros de colunas*/
    list-style-type: '\1F5F8\00A0'; /*Esse comando/declaração serve para mudar os estilo de tipo do marcador de item da lista, o código 00A0 serve para fazer um espaço sem quebra*/
}

footer{
    background-color: var(--cor5);
    color: white;
    text-align: center;
    font-size: .8em;
    padding: 5px;
}
footer a{
    color: white;
    font-weight: bold;
    text-decoration: none;
}
footer a:hover{
    background-color: var(--cor1);
    color: var(--cor5);
    text-decoration: underline;
    padding: 3px;
}